name: Testing Suite
on: [push, pull_request] # Run on Push and Pull Requests

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ci_db_test
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: yarn install
      - name: Setup DB
        run: yarn prisma db push
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ci_db_test
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_db_test
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ci_db_test
